{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,QAAUC,YAAW,WACjBP,EACFI,EAAQ,uBAAwCI,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAEpDM,EAAK,sBAAqCG,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GAEnD,E,IAIQU,SAASC,cAAc,SAC/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBACF,IAAMd,EAAQa,EAAEE,OAAOC,SAAShB,MAAMiB,MAChCC,EAAWL,EAAEE,OAAOC,SAASG,KAAKF,MAClCG,EAASP,EAAEE,OAAOC,SAASI,OAAOH,MACxCT,YAAW,WACT,IACID,EADAc,EAAU,EAEdd,EAAUe,aAAY,WAEpBxB,EAAcuB,EAAQ,GADJrB,EAAQqB,GAAWH,GAElCK,MAAK,SAAAN,GAAWO,QAAQC,IAAIR,E,IAC5BS,OAAM,SAAAT,GAAWO,QAAQC,IAAIR,E,MAC9BI,KACeD,GACfO,cAAcpB,E,GAEdW,E,GACHlB,GACHa,EAAEE,OAAOa,O","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    timerId = setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, 0);\n});\n  return promise;\n}\nconst form = document.querySelector('.form');\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  const delay = e.target.elements.delay.value;\n  const interval = e.target.elements.step.value;\n  const amount = e.target.elements.amount.value;\n  setTimeout(() => {\n    let counter = 0;\n    let timerId;\n    timerId = setInterval(() => {\n      const sumDelay = +delay + counter * +interval;\n      createPromise(counter+1, sumDelay)\n        .then(value => { console.log(value) })\n        .catch(value => { console.log(value) });\n        counter++;\n      if (counter === +amount) {\n        clearInterval(timerId);\n      }\n      },interval)\n  }, delay)\n  e.target.reset();\n});"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","timerId","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","target","elements","value","interval","step","amount","counter","setInterval","then","console","log","catch","clearInterval","reset"],"version":3,"file":"03-promises.4e684e93.js.map"}